{"version":3,"sources":["index.js"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Nav","characters","this","props","active","onClick","rows","i","length","buttonClass","push","id","uuidv4","renderCharacters","Fragment","React","Component","Graphs","options","responsive","maintainAspectRatio","wealthData","labels","data","datasets","label","backgroundColor","borderColor","map","x","replace","borderWidth","wealthWithoutConsumables","Table","className","item","itemKey","renderHeaderRow","items","itemIndex","renderRow","renderRows","WealthViewer","state","fetch","then","res","json","setState","Object","keys","button","target","innerText","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.667286b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nclass Nav extends React.Component {\r\n    renderCharacters() {\r\n        const characters = this.props.characters;\r\n        const active = this.props.active;\r\n        const onClick = this.props.onClick;\r\n        const rows = []\r\n        for (let i = 0; i < characters.length; i++) {\r\n            let buttonClass = (characters[i][\"name\"] === active) ? \"active\" : \"\";\r\n            rows.push(<li key={uuidv4()}>\r\n                <button id={buttonClass} onClick={onClick}>{characters[i][\"name\"]}</button>\r\n            </li>);\r\n        }\r\n        return rows\r\n    }\r\n\r\n    render() {\r\n        const rows = this.renderCharacters()\r\n        return (\r\n            <React.Fragment>\r\n                <nav>\r\n                    <div id=\"sticky_nav\">\r\n                        <header>Wealth Manager</header>\r\n                        <ul>\r\n                            {rows}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass Graphs extends React.Component {\r\n    render() {\r\n        const options = {\r\n            responsive: true,\r\n            maintainAspectRatio: false\r\n        }\r\n        const wealthData = {\r\n            labels: this.props.data[\"wealth\"][1],\r\n            datasets: [{\r\n                label: \"Wealth in GP\",\r\n                data: this.props.data[\"wealth\"][0],\r\n                backgroundColor: this.props.data[\"wealth\"][2],\r\n                borderColor: this.props.data[\"wealth\"][2].map((x) => x.replace(\"0.2\", \"1\")),\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        const wealthWithoutConsumables = {\r\n            labels: this.props.data[\"wealth_without_consumable\"][1],\r\n            datasets: [{\r\n                label: \"Wealth in GP\",\r\n                data: this.props.data[\"wealth_without_consumable\"][0],\r\n                backgroundColor: this.props.data[\"wealth_without_consumable\"][2],\r\n                borderColor: this.props.data[\"wealth_without_consumable\"][2].map((x) => x.replace(\"0.2\", \"1\")),\r\n                borderWidth: 1\r\n            }]\r\n        }\r\n        return <React.Fragment>\r\n            <Bar options={options} data={wealthData}/>\r\n            <Bar options={options} data={wealthWithoutConsumables}/>\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\n\r\nclass Table extends React.Component {\r\n    renderHeaderRow(data) {\r\n        return (\r\n            <React.Fragment key={uuidv4()}>\r\n                <tr key={uuidv4()}>\r\n                    <th key={uuidv4()} className=\"row_header\"><p>Name</p></th>\r\n                    <th key={uuidv4()} className=\"row_header\"><p>Level</p></th>\r\n                    <th key={uuidv4()} className=\"row_header \"><p>Quantity</p></th>\r\n                    <th key={uuidv4()} className=\"row_header \"><p>Value</p></th>\r\n                    <th key={uuidv4()} className=\"row_header \"><p>Total Value</p></th>\r\n                    <th key={uuidv4()} className=\"row_header \"><p>Consumable</p></th>\r\n                </tr>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    renderRow(item, itemKey) {\r\n        return (\r\n            <React.Fragment key={uuidv4()}>\r\n                <tr key={uuidv4()}>\r\n                    <th key={uuidv4()}><p>{item[\"name\"]}</p></th>\r\n                    <th key={uuidv4()}><p>{item[\"level\"]}</p></th>\r\n                    <th key={uuidv4()}><p>{item[\"quantity\"]}</p></th>\r\n                    <th key={uuidv4()}><p>{item[\"value\"]} GP</p></th>\r\n                    <th key={uuidv4()}><p>{item[\"value\"] * item[\"quantity\"]} GP</p></th>\r\n                    <th key={uuidv4()}><p>{item[\"consumable\"] ? \"✓\" : '✗'}</p></th>\r\n                </tr>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    renderRows(characters, active) {\r\n        const rows = []\r\n        rows.push(this.renderHeaderRow())\r\n        for (let i = 0; i < characters.length; i++) {\r\n            if (characters[i][\"name\"] === active) {\r\n                const items = characters[i][\"items\"]\r\n                for (let itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                    rows.push(this.renderRow(items[itemIndex], itemIndex));\r\n                }\r\n            }\r\n        }\r\n        return rows\r\n    }\r\n\r\n    render() {\r\n        const characters = this.props.characters;\r\n        const active = this.props.active;\r\n        return (\r\n            <React.Fragment>\r\n                <table>\r\n                    <tbody>\r\n                    {this.renderRows(characters, active)}\r\n                    </tbody>\r\n                </table>\r\n            </React.Fragment>);\r\n    }\r\n\r\n}\r\n\r\n\r\nclass WealthViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            active: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\r\n            \"https://wealth-viewer.herokuapp.com/wealth\")\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                this.setState({\r\n                    data: json,\r\n                    active: json[\"characters\"][0][\"name\"]\r\n                });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        if (Object.keys(data).length === 0) {\r\n            return <h1> Data is Loading, please stand by... </h1>;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Nav characters={this.state.data[\"characters\"]} active={this.state.active}\r\n                     onClick={button => this.setState({active: button.target.innerText})}/>\r\n                <main>\r\n                    <header id=\"current_character\">{this.state.active}</header>\r\n                    <section id=\"charts\">\r\n                        <Graphs data={this.state.data}/>\r\n                    </section>\r\n                    <section id=\"table\">\r\n                        <Table characters={this.state.data[\"characters\"]} active={this.state.active}/>\r\n                    </section>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<WealthViewer/>);\r\n"],"sourceRoot":""}